{"version":3,"file":"static/js/186.d477f39d.chunk.js","mappings":"yNA4CA,UAvCgB,WACd,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAGd,8GAEyBC,EAAAA,EAAAA,IAAiBL,EAAIG,GAF9C,OAEUG,EAFV,OAGIP,EAAQO,EAAOR,KAAKS,SAHxB,wGAHc,sBAYd,OAZc,mCAUdC,GAEO,WACLL,EAAgBM,OACjB,CACF,GAAE,CAACT,KAGF,SAAC,EAAAU,SAAD,UACGZ,EAAKa,OAAS,GACb,wBACGb,EAAKc,KAAI,SAAAC,GAAI,OACZ,2BACE,yCAAeA,EAAKC,WACpB,uBAAID,EAAKE,YAFX,UAAYF,EAAKb,IADL,MAQhB,6CAIP,C,+LCxCDgB,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEVC,EAAY,SAAAT,GAChB,MAAO,CACLU,OAAQV,EAAMU,OACdC,OAAQ,CAAEC,QAASJ,GAEtB,EAEYK,EAAa,mCAAG,WAAMb,GAAN,iFACdO,EAAAA,EAAAA,IAAU,yBAA0BE,EAAUT,IADhC,mFAAH,sDAIbc,EAAc,mCAAG,WAAOC,EAAQf,GAAf,iFACfO,EAAAA,EAAAA,IAAA,iBAA4B,CACvCG,OAAQV,EAAMU,OACdC,OAAQ,CAAEC,QAASJ,EAASQ,MAAOD,KAHT,mFAAH,wDAOdE,EAAgB,mCAAG,WAAO1B,EAAIS,GAAX,iFACjBO,EAAAA,EAAAA,IAAA,kBAAqBhB,GAAMkB,EAAUT,IADpB,mFAAH,wDAIhBkB,EAAa,mCAAG,WAAO3B,EAAIS,GAAX,iFACdO,EAAAA,EAAAA,IAAA,kBAAqBhB,EAArB,YAAmCkB,EAAUT,IAD/B,mFAAH,wDAIbJ,EAAgB,mCAAG,WAAOL,EAAIS,GAAX,iFACjBO,EAAAA,EAAAA,IAAA,kBAAqBhB,EAArB,YAAmCkB,EAAUT,IAD5B,mFAAH,uD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { loadMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [data, setData] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetch() {\n      try {\n        const result = await loadMovieReviews(id, abortController);\n        setData(result.data.results);\n      } catch (err) {}\n    }\n\n    fetch();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  return (\n    <Fragment>\n      {data.length > 0 ? (\n        <ul>\n          {data.map(elem => (\n            <li key={`${elem.id}`}>\n              <p>{`Author: ${elem.author}`}</p>\n              <p>{elem.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        \"We don't have any reviews for this movie.\"\n      )}\n    </Fragment>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '2ea7c46495834bb72f73e9f64cf920c5';\n\nconst addParams = abort => {\n  return {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  };\n};\n\nexport const loadTrendList = async abort => {\n  return await axios.get('/3/trending/movie/week', addParams(abort));\n};\n\nexport const loadSearchList = async (search, abort) => {\n  return await axios.get(`3/search/movie`, {\n    signal: abort.signal,\n    params: { api_key: API_KEY, query: search },\n  });\n};\n\nexport const loadMovieFulInfo = async (id, abort) => {\n  return await axios.get(`3/movie/${id}`, addParams(abort));\n};\n\nexport const loadMovieCast = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/credits`, addParams(abort));\n};\n\nexport const loadMovieReviews = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/reviews`, addParams(abort));\n};\n"],"names":["useState","data","setData","id","useParams","useEffect","abortController","AbortController","loadMovieReviews","result","results","fetch","abort","Fragment","length","map","elem","author","content","axios","API_KEY","addParams","signal","params","api_key","loadTrendList","loadSearchList","search","query","loadMovieFulInfo","loadMovieCast"],"sourceRoot":""}