{"version":3,"file":"static/js/158.38d059ef.chunk.js","mappings":"sMAEaA,E,OAAOC,GAAAA,GAAH,wG,SCEJC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,MACE,CAAEH,KAAAA,KACA,SAACH,EAAD,UACGG,EAAKI,KAAI,SAAAC,GAAI,OACZ,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKL,GAAL,OAAcI,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAKK,SAFDL,EAAKE,GADF,KAUrB,C,+JClBYI,EAAeb,EAAAA,GAAAA,IAAH,oGAOZc,EAAcd,EAAAA,GAAAA,MAAH,6OAeXe,EAAcf,EAAAA,GAAAA,MAAH,6EAOXgB,EAAYhB,EAAAA,GAAAA,OAAH,4F,2BCkCtB,EArDe,WACb,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAyBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,SACzBC,EAAkB,IAAIC,gBAFd,wCAId,8GAEyBC,EAAAA,EAAAA,IAAeJ,EAAOE,GAF/C,OAEUG,EAFV,OAGIV,EAAcU,EAAO7B,KAAK8B,SAH9B,wGAJc,sBAad,OAbc,mCAWdC,GAEO,WACLL,EAAgBM,OACjB,CACF,GAAE,CAACX,KAGF,6BACE,SAACV,EAAD,WACE,iBAAMsB,SA1BS,SAAAC,GACnBA,EAAMC,iBACNb,EAAgB,CAAEE,MAAOR,GAC1B,EAuBK,UACE,UAACJ,EAAD,YACE,SAACC,EAAD,CACEuB,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOzB,EACP0B,SAAU,SAAAR,GAAK,OAAIjB,EAAUiB,EAAMS,OAAOF,MAA3B,KAEjB,SAAC3B,EAAD,CAAWuB,KAAK,SAAhB,UACE,SAAC,MAAD,CAAiBO,MAAO,CAAEC,MAAO,OAAQC,OAAQ,mBAKxD5B,EAAW6B,OAAS,IAAK,SAAChD,EAAA,EAAD,CAAYC,KAAMkB,EAAYjB,OAAO,OAGpE,C,+LC7DD+C,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEVC,EAAY,SAAAlB,GAChB,MAAO,CACLmB,OAAQnB,EAAMmB,OACdC,OAAQ,CAAEC,QAASJ,GAEtB,EAEYK,EAAa,mCAAG,WAAMtB,GAAN,iFACdgB,EAAAA,EAAAA,IAAU,yBAA0BE,EAAUlB,IADhC,mFAAH,sDAIbJ,EAAc,mCAAG,WAAOZ,EAAQgB,GAAf,iFACfgB,EAAAA,EAAAA,IAAA,iBAA4B,CACvCG,OAAQnB,EAAMmB,OACdC,OAAQ,CAAEC,QAASJ,EAASzB,MAAOR,KAHT,mFAAH,wDAOduC,EAAgB,mCAAG,WAAOhD,EAAIyB,GAAX,iFACjBgB,EAAAA,EAAAA,IAAA,kBAAqBzC,GAAM2C,EAAUlB,IADpB,mFAAH,wDAIhBwB,EAAa,mCAAG,WAAOjD,EAAIyB,GAAX,iFACdgB,EAAAA,EAAAA,IAAA,kBAAqBzC,EAArB,YAAmC2C,EAAUlB,IAD/B,mFAAH,wDAIbyB,EAAgB,mCAAG,WAAOlD,EAAIyB,GAAX,iFACjBgB,EAAAA,EAAAA,IAAA,kBAAqBzC,EAArB,YAAmC2C,EAAUlB,IAD5B,mFAAH,uD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-size: 16px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ data, prefix }) => {\n  const location = useLocation();\n\n  return (\n    { data } && (\n      <List>\n        {data.map(elem => (\n          <li key={elem.id}>\n            <Link to={`${prefix}${elem.id}`} state={{ from: location }}>\n              {elem.title}\n            </Link>\n          </li>\n        ))}\n      </List>\n    )\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SearchWraper = styled.div`\n  padding: 8px;\n  margin-bottom: 8px;\n\n  border-bottom: 1px solid grey;\n`;\n\nexport const SearchLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n\n  width: 350px;\n\n  padding: 8px 16px 8px 8px;\n  font-size: 16px;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\n\nexport const SearchField = styled.input`\n  border: none;\n  outline: none;\n\n  width: 100%;\n`;\n\nexport const SearchBtn = styled.button`\n  border: 0;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport {\n  SearchField,\n  SearchLabel,\n  SearchWraper,\n  SearchBtn,\n} from './Movies.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { loadSearchList } from 'services/api';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: search });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    const abortController = new AbortController();\n\n    async function fetch() {\n      try {\n        const result = await loadSearchList(query, abortController);\n        setMoviesList(result.data.results);\n      } catch (err) {}\n    }\n\n    fetch();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <main>\n      <SearchWraper>\n        <form onSubmit={handleSubmit}>\n          <SearchLabel>\n            <SearchField\n              name=\"search\"\n              type=\"text\"\n              autocomplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n              value={search}\n              onChange={event => setSearch(event.target.value)}\n            />\n            <SearchBtn type=\"submit\">\n              <AiOutlineSearch style={{ width: '24px', height: '24px' }} />\n            </SearchBtn>\n          </SearchLabel>\n        </form>\n      </SearchWraper>\n      {moviesList.length > 0 && <MoviesList data={moviesList} prefix=\"\" />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '2ea7c46495834bb72f73e9f64cf920c5';\n\nconst addParams = abort => {\n  return {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  };\n};\n\nexport const loadTrendList = async abort => {\n  return await axios.get('/3/trending/movie/week', addParams(abort));\n};\n\nexport const loadSearchList = async (search, abort) => {\n  return await axios.get(`3/search/movie`, {\n    signal: abort.signal,\n    params: { api_key: API_KEY, query: search },\n  });\n};\n\nexport const loadMovieFulInfo = async (id, abort) => {\n  return await axios.get(`3/movie/${id}`, addParams(abort));\n};\n\nexport const loadMovieCast = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/credits`, addParams(abort));\n};\n\nexport const loadMovieReviews = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/reviews`, addParams(abort));\n};\n"],"names":["List","styled","MoviesList","data","prefix","location","useLocation","map","elem","to","id","state","from","title","SearchWraper","SearchLabel","SearchField","SearchBtn","useState","search","setSearch","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","useEffect","query","get","abortController","AbortController","loadSearchList","result","results","fetch","abort","onSubmit","event","preventDefault","name","type","autocomplete","autoFocus","placeholder","value","onChange","target","style","width","height","length","axios","API_KEY","addParams","signal","params","api_key","loadTrendList","loadMovieFulInfo","loadMovieCast","loadMovieReviews"],"sourceRoot":""}