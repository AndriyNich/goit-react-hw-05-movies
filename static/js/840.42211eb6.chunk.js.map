{"version":3,"file":"static/js/840.42211eb6.chunk.js","mappings":"mSAGaA,EAAaC,EAAAA,GAAAA,IAAH,+GAQVC,EAASD,EAAAA,GAAAA,IAAH,0DAINE,EAAQF,EAAAA,GAAAA,EAAH,iEAKLG,EAAYH,EAAAA,GAAAA,IAAH,6EAKTI,GAASJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6K,SCwEnB,EArFqB,WAAO,IAAD,YACjBM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAEd,8GAEyBC,EAAAA,EAAAA,IAAiBV,EAAIQ,GAF9C,OAEUG,EAFV,OAGIP,EAAQO,EAAOR,MAHnB,wGAFc,sBAWd,OAXc,mCASdS,GAEO,WACLJ,EAAgBK,OACjB,CACF,GAAE,CAACb,IAEJ,IAIec,EAIf,OACE,0BACGC,OAAOC,KAAKb,GAAMc,OAAS,IAC1B,4BACE,SAACpB,EAAD,WACE,UAACC,EAAD,CAAQoB,GAAE,oBAAEb,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAApC,WACE,SAAC,MAAD,IADF,gBAMF,UAAC3B,EAAD,YACE,gBACE4B,MAAM,MACNC,IAAG,yCAAoCnB,EAAI,aAC3CoB,IAAG,iBAAYpB,EAAI,UAErB,4BACE,wBAAKA,EAAI,SACT,6CA3BE,SAAAA,GACZ,OAAOqB,KAAKC,MAAOtB,EAAI,WAAiBA,EAAI,WAAkB,IAC/D,CAyB8BuB,CAAMvB,GAAzB,QACA,sCACA,uBAAIA,EAAI,YACR,oCACA,wBA3BGW,EA2BQX,EAAI,OA1BlBW,EAAWa,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,gBA6BzC,UAAClC,EAAD,YACE,SAACC,EAAD,sCACA,2BACE,yBACE,SAAC,KAAD,CACEsB,GAAG,OACHC,MAAO,CAAEC,KAAI,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUc,aAAZ,aAAE,EAAiBC,YAAnB,QAA2Bf,GAF1C,qBAOF,yBACE,SAAC,KAAD,CACEa,GAAG,UACHC,MAAO,CAAEC,KAAI,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUc,aAAZ,aAAE,EAAiBC,YAAnB,QAA2Bf,GAF1C,8BASN,SAAC,EAAAyB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAMX,C,+LC7FDC,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEVC,EAAY,SAAArB,GAChB,MAAO,CACLsB,OAAQtB,EAAMsB,OACdC,OAAQ,CAAEC,QAASJ,GAEtB,EAEYK,EAAa,mCAAG,WAAMzB,GAAN,iFACdmB,EAAAA,EAAAA,IAAU,yBAA0BE,EAAUrB,IADhC,mFAAH,sDAIb0B,EAAc,mCAAG,WAAOC,EAAQ3B,GAAf,iFACfmB,EAAAA,EAAAA,IAAA,iBAA4B,CACvCG,OAAQtB,EAAMsB,OACdC,OAAQ,CAAEC,QAASJ,EAASQ,MAAOD,KAHT,mFAAH,wDAOd9B,EAAgB,mCAAG,WAAOV,EAAIa,GAAX,iFACjBmB,EAAAA,EAAAA,IAAA,kBAAqBhC,GAAMkC,EAAUrB,IADpB,mFAAH,wDAIhB6B,EAAa,mCAAG,WAAO1C,EAAIa,GAAX,iFACdmB,EAAAA,EAAAA,IAAA,kBAAqBhC,EAArB,YAAmCkC,EAAUrB,IAD/B,mFAAH,wDAIb8B,EAAgB,mCAAG,WAAO3C,EAAIa,GAAX,iFACjBmB,EAAAA,EAAAA,IAAA,kBAAqBhC,EAArB,YAAmCkC,EAAUrB,IAD5B,mFAAH,uD","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const WraperInfo = styled.div`\n  display: flex;\n  gap: 16px;\n\n  padding: 8px 0;\n  border-bottom: 1px solid grey;\n`;\n\nexport const Wraper = styled.div`\n  border-bottom: 1px solid grey;\n`;\n\nexport const Title = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const WraperBtn = styled.div`\n  padding: 8px 0;\n  border-bottom: 1px solid gray;\n`;\n\nexport const GoBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n  padding: 4px 16px;\n  width: 150px;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\n","import { Suspense, useState, useEffect } from 'react';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { loadMovieFulInfo } from 'services/api';\nimport {\n  Title,\n  Wraper,\n  WraperInfo,\n  GoBack,\n  WraperBtn,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [data, setData] = useState({});\n  const location = useLocation();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function fetch() {\n      try {\n        const result = await loadMovieFulInfo(id, abortController);\n        setData(result.data);\n      } catch (err) {}\n    }\n\n    fetch();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  const score = data => {\n    return Math.round((data['popularity'] / data['vote_count']) * 100);\n  };\n\n  const genres = listGenres => {\n    return listGenres.map(({ name }) => name).join(', ');\n  };\n\n  return (\n    <main>\n      {Object.keys(data).length > 0 && (\n        <div>\n          <WraperBtn>\n            <GoBack to={location.state?.from ?? '/'}>\n              <AiOutlineArrowLeft />\n              Go back\n            </GoBack>\n          </WraperBtn>\n\n          <WraperInfo>\n            <img\n              width=\"320\"\n              src={`https://image.tmdb.org/t/p/w500${data['poster_path']}`}\n              alt={`poster ${data['title']}`}\n            />\n            <div>\n              <h2>{data['title']}</h2>\n              <p>{`User Score: ${score(data)}%`}</p>\n              <h3>Overview</h3>\n              <p>{data['overview']}</p>\n              <h3>Gemres</h3>\n              <p>{genres(data['genres'])}</p>\n            </div>\n          </WraperInfo>\n          <Wraper>\n            <Title>Additional information</Title>\n            <ul>\n              <li>\n                <Link\n                  to=\"cast\"\n                  state={{ from: location?.state?.from ?? location }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"reviews\"\n                  state={{ from: location?.state?.from ?? location }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </Wraper>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '2ea7c46495834bb72f73e9f64cf920c5';\n\nconst addParams = abort => {\n  return {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  };\n};\n\nexport const loadTrendList = async abort => {\n  return await axios.get('/3/trending/movie/week', addParams(abort));\n};\n\nexport const loadSearchList = async (search, abort) => {\n  return await axios.get(`3/search/movie`, {\n    signal: abort.signal,\n    params: { api_key: API_KEY, query: search },\n  });\n};\n\nexport const loadMovieFulInfo = async (id, abort) => {\n  return await axios.get(`3/movie/${id}`, addParams(abort));\n};\n\nexport const loadMovieCast = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/credits`, addParams(abort));\n};\n\nexport const loadMovieReviews = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/reviews`, addParams(abort));\n};\n"],"names":["WraperInfo","styled","Wraper","Title","WraperBtn","GoBack","Link","id","useParams","useState","data","setData","location","useLocation","useEffect","abortController","AbortController","loadMovieFulInfo","result","fetch","abort","listGenres","Object","keys","length","to","state","from","width","src","alt","Math","round","score","map","name","join","Suspense","fallback","axios","API_KEY","addParams","signal","params","api_key","loadTrendList","loadSearchList","search","query","loadMovieCast","loadMovieReviews"],"sourceRoot":""}